!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8' />
    <title>Points on a map</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet' />
    <style>
      body {
        margin: 0;
        padding: 0;
      }

      #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div id='map'></div>
    <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoidG9tbWFzb3NjYWxldCIsImEiOiJjazg4ZXpiYTcwN2kwM2ltbWZjeDJpZ3ZhIn0.3pYfWxpzdacp8Q-YqqP-5A'; // replace this with your access token
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/tommasoscalet/ck915761e0v8v1il3js948yzf/draft', // replace this with your style URL
      center: [ 11.83, 46.17],
      zoom: 10.7
    });
    // markers 10 points
      map.on('click', function(e) {
  var features = map.queryRenderedFeatures(e.point, {
    layers: ['controls10points'] // layer 10 points
  });

  if (!features.length) {
    return;
  }

  var feature = features[0];

  var popup = new mapboxgl.Popup({ offset: [0, -15] })
    .setLngLat(feature.geometry.coordinates)
    .setHTML('<h3>' + feature.properties.title + '</h3><p>' + feature.properties.description + '</p>')
    .addTo(map);
});
      // marker 20 points
      map.on('click', function(e) {
  var features = map.queryRenderedFeatures(e.point, {
    layers: ['controls20points'] // layer 20 points
  });

  if (!features.length) {
    return;
  }

  var feature = features[0];

  var popup = new mapboxgl.Popup({ offset: [0, -15] })
    .setLngLat(feature.geometry.coordinates)
    .setHTML('<h3>' + feature.properties.title + '</h3><p>' + feature.properties.description + '</p>')
    .addTo(map);
});
      // marker 30 points
      map.on('click', function(e) {
  var features = map.queryRenderedFeatures(e.point, {
    layers: ['controls30points'] // layer 30 points
  });

  if (!features.length) {
    return;
  }

  var feature = features[0];

  var popup = new mapboxgl.Popup({ offset: [0, -15] })
    .setLngLat(feature.geometry.coordinates)
    .setHTML('<h3>' + feature.properties.title + '</h3><p>' + feature.properties.description + '</p>')
    .addTo(map);
});
      // Add geolocate control to the map.
    map.addControl(
    new mapboxgl.GeolocateControl({
    positionOptions: {
    enableHighAccuracy: true
    },
    trackUserLocation: true
    })
);
      // Add zoom and rotation controls to the map.
map.addControl(new mapboxgl.NavigationControl());
    </script>
  </body>
</html>
